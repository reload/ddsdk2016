<?php

/**
 * @file
 * Update functionality for DDS update.
 */

use Drupal\file\Entity\File;
use Drupal\locale\SourceString;
use Drupal\node\Entity\Node;

/**
 * Helper to manually add a single translation string.
 *
 * @param string $source_string
 *   Source string.
 * @param string $langcode
 *   The langcode.
 * @param string $translated_string
 *   Translated string.
 */
function dds_update_add_translation($source_string, $langcode, $translated_string) {
  // Find existing source string.
  $storage = \Drupal::service('locale.storage');
  $string = $storage->findString(['source' => $source_string]);
  if (is_null($string)) {
    $string = new SourceString();
    $string->setString($source_string);
    $string->setStorage($storage);
    $string->save();
  }
  // Create translation. If one already exists, it will be replaced.
  $translation = $storage->createTranslation([
    'lid' => $string->lid,
    'language' => $langcode,
    'translation' => $translated_string,
  ]);
  $translation->save();
}

/**
 * Helper function for translations.
 */
function _dds_update_8101() {
  dds_update_add_translation('Follow us on Facebook', 'da', 'Følg med på Facebook');
  dds_update_add_translation('Follow Spejder on Facebook', 'da', 'Følg Spejder på Facebook');
  dds_update_add_translation('Follow DDS on Facebook', 'da', 'Følg DDS på Facebook');
}

/**
 * Helper function for translations and badges.
 */
function _dds_update_8103() {
  dds_update_add_translation('Read more', 'da', 'Læs mere');
  dds_update_add_translation('Read less', 'da', 'Læs mindre');

  $nids = \Drupal::entityQuery('node')
    ->condition('type', 'badge')
    ->execute();

  $nodes = Node::loadMultiple($nids);

  foreach ($nodes as $node) {
    $node->set('field_2018_badge', FALSE);
    $node->save();
  }
}

/**
 * Helper function for translations.
 */
function _dds_update_8104() {
  dds_update_add_translation('Badges', 'da', 'Mærkeunivers');
  dds_update_add_translation('Badges (2006)', 'da', 'Gamle mærker (2006)');
  dds_update_add_translation('Badges description', 'da', 'Her kan du finde alle forløbs- og fokusmærker i Det Danske Spejderkorps');
  dds_update_add_translation('Badges description (2006)', 'da', 'Her finder du beskrivelser af de gamle mærker (2006-2018) i Det Danske Spejderkorps');
}

/**
 * Translations for FB footer.
 */
function dds_update_update_8101() {
  _dds_update_8101();
}

/**
 * Translations and config for new badges.
 */
function dds_update_update_8103() {
  _dds_update_8103();
}

/**
 * Translations for titles on badges pages.
 */
function dds_update_update_8104() {
  _dds_update_8104();
}

/**
 * Add translations for jobpostings.
 */
function dds_update_update_8105() {
  dds_update_add_translation('Jobpostings', 'da', 'Ledige stillinger');
  dds_update_add_translation('Paid jobs', 'da', 'Betalte stillinger');
  dds_update_add_translation('Volunteer jobs', 'da', 'Frivillig stillinger');
  dds_update_add_translation('There are currently no vacancies available.', 'da', 'Der er pt. ingen ledige stillinger.');
  dds_update_add_translation('Jobs in the Danish Guide and Scout Association', 'da', 'Ledige stillinger i Det Danske Spejderkorps');
}

/**
 * Add translations for exposed filters popout.
 */
function dds_update_update_8106() {
  dds_update_add_translation('Hide filters', 'da', 'Skjul filtre');
  dds_update_add_translation('Show filters', 'da', 'Vis filtre');
}

/**
 * Add translations for forward mail.
 */
function dds_update_update_8107() {
  dds_update_add_translation('article', 'da', 'artikel');
  dds_update_add_translation('file', 'da', 'fil');
}

/**
 * Mark unused files as temporary.
 *
 * We only now switch `make_unused_managed_files_temporary` to true. Files are
 * marked temporary only when usage count hits zero (FileUsageBase::delete()).
 *
 * So we need to process all files and mark those temporary that has already
 * reached a usage count of zero.
 *
 * @see \Drupal\file\FileUsage\FileUsageBase::delete()
 */
function dds_update_update_8108() {
  $db = \Drupal::database();

  $query = $db->select('file_managed', 'fm')->fields('fm', ['fid']);
  $query->leftJoin('file_usage', 'fu', 'fm.fid = fu.fid');
  $query->condition('fm.status', FILE_STATUS_PERMANENT);
  $query->isNull('fu.fid');
  $fids = $query->execute()->fetchCol();

  $usage_service = \Drupal::service('file.usage');

  $files = File::loadMultiple($fids);

  $i = 0;

  foreach ($files as $file) {
    $usage = $usage_service->listUsage($file);

    if (empty($usage)) {
      $file->setTemporary();
      $file->save();
      $i++;
    }
  }

  \Drupal::logger('dds_update')->notice("Changed {$i} unused files to temporary files.");
}
