<?php

/**
 * @file
 * Add facets as views "blocks" for easier theming.
 */

use Drupal\Core\Url;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_preprocess_views_view().
 *
 * Detect facets related to the view and inject them as render-arrays.
 */
function facets_views_block_preprocess_views_view(&$variables) {
  // Check if view is available at all.
  if (!isset($variables['view'])) {
    return;
  }

  // Acquire view information.
  /** @var \Drupal\views\ViewExecutable $view */
  $view = $variables['view'];
  $view_id = $view->id();
  $view_display = $view->current_display;

  // Ensure that we found both a view id and a display id.
  if (!$view_id || !$view_display) {
    return;
  }

  // Load facets grouped by facet sources.
  /** @var \Drupal\facets\FacetListBuilder $list_builder */
  $list_builder = \Drupal::service('entity.manager')->getListBuilder('facets_facet');
  $groups = $list_builder->loadGroups();
  $group = NULL;
  foreach ($groups['facet_source_groups'] as $facet_source_id => $data) {
    if ($data['facet_source']['view_id'] == $view_id && $data['facet_source']['view_display'] == $view_display) {
      $group = $data;
      break;
    }
  }

  // No source+facets, bail...
  if (!$group) {
    return;
  }

  // Moving field_group to the end of the array, if it exists.
  /** @var \Drupal\facets\Entity\Facet $facet */
  foreach ($group['facets'] as $facet_id => $facet) {
    if ($facet->getFieldIdentifier() === 'field_group') {
      unset($group['facets'][$facet_id]);
      $group['facets'][$facet_id] = $facet;

      break;
    }
  }

  // Load and build blocks for this view's facets.
  foreach ($group['facets'] as $facet_id => $facet) {
    // Let the facet_manager build the facets.
    $build = \Drupal::service('facets.manager')->build($facet);

    // Only render facets if there are any filters to display.
    if (!empty($build)) {
      // Wrap facet widget in a "block"-ish wrapper.
      $variables['facets'][$facet_id] = [
        '#theme' => 'facets_views_block',
        '#id' => $facet_id,
        '#label' => $facet->getName(),
        '#facet' => $build,
      ];
    }
  }

  // Add tag variable to the search view to indicate potential tags.
  if ($view_id === 'search') {
    // Get all tag terms so we can prepare a tag variable for the search view.
    // We also unset the tag facet parameter from the parameters array so we can
    // use the parameters as the query parameters in a "reset" link.
    $parameters = \Drupal::request()->query->all();
    if (!empty($parameters['f'])) {
      $tags = [];
      foreach ($parameters['f'] as $delta => $param) {
        // Facet query parameter format: "subject:138".
        $param = explode(':', $param);
        if (!empty($param[1])) {
          $tags[] = Term::load($param[1]);
          unset($parameters['f'][$delta]);
        }
      }

      // Prepare tag variable for the search view template.
      if (!empty($tags) && $tags[0] instanceof Term) {
        /* @var \Drupal\taxonomy\Entity\Term[] $tags */
        $variables['tag']['text'] = $tags[0]->label();
        // TODO: Generalize when this has to work for the general search.
        $variables['tag']['url'] = Url::fromUri('internal:/events', [
          'query' => $parameters,
        ]);
      }
    }
  }
}

/**
 * Implements hook_theme().
 */
function facets_views_block_theme() {
  return [
    'facets_views_block' => [
      'template' => 'facets_views_block-facet',
      'variables' => [
        'id' => NULL,
        'label' => NULL,
        'facet' => NULL,
      ],
    ],
  ];
}
