{#
/**
 * @file
 * Basic layout for article-type content.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set field_byline = content.field_main_media[0]['#media'].hasField('field_byline') ?
  content.field_main_media[0]['#media'].get('field_byline').getString() %}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'col-md-8',
    'print-full-width'
  ]
%}
{{ attach_library('classy/node') }}
{% block body_head %}{% endblock %}
<div class="container print-full-width">
  <section class="row">
    <article{{ attributes.addClass(classes) }}>
        {{ title_prefix }}
        {% block title_prefix %}{% endblock %}
        {% if not page %}
          <h2{{ title_attributes }}>
            <a href="{{ url }}" rel="bookmark">{{ label }}</a>
          </h2>
        {% else %}
          <h1 class="page-title">{{ label }}</h1>
        {% endif %}
        {{ title_suffix }}
        {% block title_suffix %}{% endblock %}
      {% if is_track_page %}
      <div class="track-star-wrapper {% if field_byline is empty %}no-byline{% endif %}">
        {% endif %}
        {{ content.field_main_media }}
        {% if is_track_page %}
        {% include ["@mungo/misc/star-" ~ track_universe ~ ".html.twig", "@mungo/misc/star-track.html.twig"] %}
      </div>
      {% endif %}
        {% block main_media_suffix %}{% endblock %}
      <div class="row">
        <div class="col-md-3 print-full-width">
            {% block main_content_sidebar %}{% endblock %}
        </div>
        <!-- Main content -->
        <div{{ content_attributes.addClass(['node__content', 'col-md-9', 'print-full-width']) }}>
          {% block main_content %}{% endblock %}
          {% if is_track_page %}
            {% block track_frontpage_link %}
              <a class="track-cta-button" href="{{ track_frontpage }}">Gå til TRACK forsiden</a>
            {% endblock %}
          {% endif %}
        </div>
        <div class="col-md-12 hidden-xs hidden-sm">
          {% block content_below_sidebar %}{% endblock %}
        </div>
      </div>
    </article>

    <aside class="col-md-4 no-printing article__sidebar">
        {% block sidebar %}
          <div style="background-color: #f5f5f5">
            <h2>Hurtige genveje</h2>
            <ul>
              <li>Some link</li>
              <li>Some link</li>
              <li>Some link</li>
              <li>Some link</li>
            </ul>
          </div>
          <div style="background-color: #f5f5f5">
            <h2>Mest læste</h2>
            <ul>
              <li>Some link</li>
              <li>Some link</li>
              <li>Some link</li>
              <li>Some link</li>
            </ul>
          </div>
        {% endblock %}
    </aside>

    <aside class="col-md-12 hidden-md hidden-lg">
      {{ block('content_below_sidebar') }}
    </aside>
  </section>
</div>
