{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 * - content.alternative_url: should be used for the user-facing link if available.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  'content-link',
  content.show_as_button ? 'content-link--button' : '',
]
%}
<a{% if content.target %} target="{{ content.target }}"{% endif %} href="{{ content.alternative_url ? content.alternative_url : content.url }}" {{ attributes.addClass(classes) }}>
  <div class="content-link--image">
      {{ content.thumbnail }}
  </div>
  <div class="content-link--button-wrapper">
    {% if content.show_as_button %}
      <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
        <path d="M16.2947 8.70532C16.6842 8.31578 16.6842 7.68422 16.2947 7.29468V7.29468C15.9054 6.9054 15.2743 6.90511 14.8847 7.29405L10 12.17L10 0.999999C10 0.447714 9.55228 -3.2555e-07 9 -3.49691e-07V-3.49691e-07C8.44772 -3.73832e-07 8 0.447715 8 1L8 12.17L3.11531 7.29405C2.72568 6.90511 2.0946 6.9054 1.70532 7.29468V7.29468C1.31578 7.68422 1.31578 8.31578 1.70532 8.70531L9 16L16.2947 8.70532Z"/>
        <rect y="18" width="18" height="2" rx="1"/>
      </svg>
    {% endif %}
    <div class="content-link--text">
      {% if content.lead %}
        <div class="content-link--text--lead">{{ content.lead }}</div>
      {% endif %}
      <div class="content-link--text--title">{{ content.title }}</div>
    </div>
  </div>
</a>
