uuid: 20c9c73a-0e71-411c-91fc-5369661b4692
langcode: en
status: true
dependencies:
  config:
    - field.storage.node.field_subtitle
    - field.storage.node.field_course_id
    - field.storage.node.field_event_end
    - field.storage.node.field_event_is_all_day
    - field.storage.node.field_event_location_name
    - field.storage.node.field_event_price
    - field.storage.node.field_event_signup_deadline
    - field.storage.node.field_event_start
    - field.storage.node.field_event_teaser
    - field.storage.node.field_main_media
    - field.storage.media.field_caption
    - field.storage.media.field_byline
    - field.storage.node.field_paragraphs
    - field.storage.paragraph.field_factbox_text
    - field.storage.node.field_content_author
    - field.storage.taxonomy_term.field_presentation_name
    - field.storage.paragraph.field_gallery_image
    - field.storage.paragraph.field_quotation
    - field.storage.paragraph.field_video_caption
    - field.storage.node.field_event_address
    - field.storage.node.field_event_type
    - field.storage.paragraph.field_formatted_text
    - field.storage.node.field_event_area
    - field.storage.node.field_article_type
    - field.storage.node.field_content_category
    - field.storage.node.field_content_tag
    - field.storage.node.field_content_target_group
    - field.storage.node.field_content_topic
    - field.storage.node.field_sidedeck
    - field.storage.paragraph.field_download
    - field.storage.node.field_2018_badge
    - search_api.server.solr
    - core.entity_view_mode.node.search_index
  module:
    - media
    - paragraphs
    - taxonomy
    - node
    - search_api
    - search_api_exclude_entity
id: nodes
name: Nodes
description: ''
read_only: false
field_settings:
  changed:
    label: Changed
    datasource_id: 'entity:node'
    property_path: changed
    type: date
  created:
    label: 'Authored on'
    datasource_id: 'entity:node'
    property_path: created
    type: date
  event_address_country_code:
    label: 'Event address » The two-letter country code.'
    datasource_id: 'entity:node'
    property_path: 'field_event_address:country_code'
    type: string
    dependencies:
      config:
        - field.storage.node.field_event_address
  event_address_locality:
    label: 'Event address » The locality (i.e. city).'
    datasource_id: 'entity:node'
    property_path: 'field_event_address:locality'
    type: string
    dependencies:
      config:
        - field.storage.node.field_event_address
  event_type_name:
    label: 'Event type » Taxonomy term » Name'
    datasource_id: 'entity:node'
    property_path: 'field_event_type:entity:name'
    type: string
    dependencies:
      config:
        - field.storage.node.field_event_type
      module:
        - taxonomy
  field_2018_badge_1:
    label: 'Nyt mærke (2018)'
    datasource_id: 'entity:node'
    property_path: field_2018_badge
    type: integer
    dependencies:
      config:
        - field.storage.node.field_2018_badge
  field_article_type:
    label: 'Article Type'
    datasource_id: 'entity:node'
    property_path: field_article_type
    type: string
    dependencies:
      config:
        - field.storage.node.field_article_type
  field_content_category:
    label: Category
    datasource_id: 'entity:node'
    property_path: field_content_category
    type: integer
    dependencies:
      config:
        - field.storage.node.field_content_category
  field_content_category_name:
    label: 'Category » Taxonomy term » Name'
    datasource_id: 'entity:node'
    property_path: 'field_content_category:entity:name'
    type: text
    dependencies:
      config:
        - field.storage.node.field_content_category
      module:
        - taxonomy
  field_content_tag:
    label: Tag
    datasource_id: 'entity:node'
    property_path: field_content_tag
    type: integer
    dependencies:
      config:
        - field.storage.node.field_content_tag
  field_content_tag_name:
    label: 'Tag » Taxonomy term » Name'
    datasource_id: 'entity:node'
    property_path: 'field_content_tag:entity:name'
    type: text
    dependencies:
      config:
        - field.storage.node.field_content_tag
      module:
        - taxonomy
  field_content_target_group:
    label: 'Target group'
    datasource_id: 'entity:node'
    property_path: field_content_target_group
    type: integer
    dependencies:
      config:
        - field.storage.node.field_content_target_group
  field_content_target_group_name:
    label: 'Target group » Taxonomy term » Name'
    datasource_id: 'entity:node'
    property_path: 'field_content_target_group:entity:name'
    type: text
    dependencies:
      config:
        - field.storage.node.field_content_target_group
      module:
        - taxonomy
  field_content_topic:
    label: Topic
    datasource_id: 'entity:node'
    property_path: field_content_topic
    type: integer
    dependencies:
      config:
        - field.storage.node.field_content_topic
  field_content_topic_name:
    label: 'Topic » Taxonomy term » Name'
    datasource_id: 'entity:node'
    property_path: 'field_content_topic:entity:name'
    type: text
    dependencies:
      config:
        - field.storage.node.field_content_topic
      module:
        - taxonomy
  field_course_id:
    label: 'Course id'
    datasource_id: 'entity:node'
    property_path: field_course_id
    type: integer
    dependencies:
      config:
        - field.storage.node.field_course_id
  field_download_title:
    label: 'Sidedeck » Paragraph » Download » Content » Title'
    datasource_id: 'entity:node'
    property_path: 'field_sidedeck:entity:field_download:entity:title'
    type: text
    dependencies:
      config:
        - field.storage.node.field_sidedeck
        - field.storage.paragraph.field_download
      module:
        - paragraphs
        - node
  field_event_area:
    label: Area
    datasource_id: 'entity:node'
    property_path: field_event_area
    type: integer
    dependencies:
      config:
        - field.storage.node.field_event_area
  field_event_end:
    label: End
    datasource_id: 'entity:node'
    property_path: field_event_end
    type: date
    dependencies:
      config:
        - field.storage.node.field_event_end
  field_event_is_all_day:
    label: 'All day event'
    datasource_id: 'entity:node'
    property_path: field_event_is_all_day
    type: boolean
    dependencies:
      config:
        - field.storage.node.field_event_is_all_day
  field_event_location_name:
    label: 'Event location name'
    datasource_id: 'entity:node'
    property_path: field_event_location_name
    type: text
    dependencies:
      config:
        - field.storage.node.field_event_location_name
  field_event_price:
    label: Price
    datasource_id: 'entity:node'
    property_path: field_event_price
    type: string
    dependencies:
      config:
        - field.storage.node.field_event_price
  field_event_signup_deadline:
    label: 'Signup deadline'
    datasource_id: 'entity:node'
    property_path: field_event_signup_deadline
    type: date
    dependencies:
      config:
        - field.storage.node.field_event_signup_deadline
  field_event_start:
    label: Start
    datasource_id: 'entity:node'
    property_path: field_event_start
    type: date
    dependencies:
      config:
        - field.storage.node.field_event_start
  field_event_teaser:
    label: Teaser
    datasource_id: 'entity:node'
    property_path: field_event_teaser
    type: text
    boost: !!float 2
    dependencies:
      config:
        - field.storage.node.field_event_teaser
  field_event_type:
    label: 'Event type'
    datasource_id: 'entity:node'
    property_path: field_event_type
    type: integer
    dependencies:
      config:
        - field.storage.node.field_event_type
  field_factbox_text:
    label: 'Paragraphs » Paragraph » Text'
    datasource_id: 'entity:node'
    property_path: 'field_paragraphs:entity:field_factbox_text'
    type: text
    dependencies:
      config:
        - field.storage.node.field_paragraphs
        - field.storage.paragraph.field_factbox_text
      module:
        - paragraphs
  field_formatted_text:
    label: 'Paragraphs » Paragraph » text'
    datasource_id: 'entity:node'
    property_path: 'field_paragraphs:entity:field_formatted_text'
    type: text
    dependencies:
      config:
        - field.storage.node.field_paragraphs
        - field.storage.paragraph.field_formatted_text
      module:
        - paragraphs
  field_presentation_name:
    label: 'Author » Taxonomy term » Presentation Name'
    datasource_id: 'entity:node'
    property_path: 'field_content_author:entity:field_presentation_name'
    type: text
    dependencies:
      config:
        - field.storage.node.field_content_author
        - field.storage.taxonomy_term.field_presentation_name
      module:
        - taxonomy
  field_quotation:
    label: 'Paragraphs » Paragraph » Quotation'
    datasource_id: 'entity:node'
    property_path: 'field_paragraphs:entity:field_quotation'
    type: text
    dependencies:
      config:
        - field.storage.node.field_paragraphs
        - field.storage.paragraph.field_quotation
      module:
        - paragraphs
  field_subtitle:
    label: Subtitle
    datasource_id: 'entity:node'
    property_path: field_subtitle
    type: text
    boost: !!float 2
    dependencies:
      config:
        - field.storage.node.field_subtitle
  field_video_caption:
    label: 'Paragraphs » Paragraph » Caption'
    datasource_id: 'entity:node'
    property_path: 'field_paragraphs:entity:field_video_caption'
    type: text
    dependencies:
      config:
        - field.storage.node.field_paragraphs
        - field.storage.paragraph.field_video_caption
      module:
        - paragraphs
  main_media_image_field_byline:
    label: 'Main Media » Media » Image byline'
    datasource_id: 'entity:node'
    property_path: 'field_main_media:entity:field_byline'
    type: text
    dependencies:
      config:
        - field.storage.node.field_main_media
        - field.storage.media.field_byline
      module:
        - media_entity
  main_media_image_field_caption:
    label: 'Main Media » Media » Image caption'
    datasource_id: 'entity:node'
    property_path: 'field_main_media:entity:field_caption'
    type: text
    dependencies:
      config:
        - field.storage.node.field_main_media
        - field.storage.media.field_caption
      module:
        - media_entity
  nid:
    label: ID
    datasource_id: 'entity:node'
    property_path: nid
    type: integer
  paragraph_images_field_byline:
    label: 'Paragraphs » Paragraph » Images » Media » Image byline'
    datasource_id: 'entity:node'
    property_path: 'field_paragraphs:entity:field_gallery_image:entity:field_byline'
    type: string
    dependencies:
      config:
        - field.storage.node.field_paragraphs
        - field.storage.paragraph.field_gallery_image
        - field.storage.media.field_byline
      module:
        - paragraphs
        - media_entity
  paragraph_images_field_caption:
    label: 'Paragraphs » Paragraph » Images » Media » Image caption'
    datasource_id: 'entity:node'
    property_path: 'field_paragraphs:entity:field_gallery_image:entity:field_caption'
    type: text
    dependencies:
      config:
        - field.storage.node.field_paragraphs
        - field.storage.paragraph.field_gallery_image
        - field.storage.media.field_caption
      module:
        - paragraphs
        - media_entity
  postal_code:
    label: 'Event address » The postal code.'
    datasource_id: 'entity:node'
    property_path: 'field_event_address:postal_code'
    type: string
    dependencies:
      config:
        - field.storage.node.field_event_address
  rendered_item:
    label: 'Rendered HTML output'
    property_path: rendered_item
    type: text
    configuration:
      roles:
        anonymous: anonymous
      view_mode:
        'entity:node':
          activity: ''
          article: ''
          badge: ''
          download: ''
          event: ''
          section_page: search_index
  status:
    label: 'Publishing status'
    datasource_id: 'entity:node'
    property_path: status
    type: boolean
  sticky:
    label: 'Sticky at top of lists'
    datasource_id: 'entity:node'
    property_path: sticky
    type: boolean
  title:
    label: Title
    datasource_id: 'entity:node'
    property_path: title
    type: string
  title_full_text:
    label: 'Title (fulltext)'
    datasource_id: 'entity:node'
    property_path: title
    type: text
    boost: !!float 3
  type:
    label: 'Content type'
    datasource_id: 'entity:node'
    property_path: type
    type: string
datasource_settings:
  'entity:node':
    plugin_id: 'entity:node'
    settings:
      bundles:
        default: true
        selected: {  }
      languages:
        default: true
        selected: {  }
    bundles:
      default: true
      selected: {  }
    languages:
      default: true
      selected: {  }
processor_settings:
  add_url:
    plugin_id: add_url
    settings: {  }
  aggregated_field:
    plugin_id: aggregated_field
    settings: {  }
  entity_status: {  }
  html_filter:
    all_fields: true
    fields:
      - event_address_country_code
      - event_address_locality
      - event_type_name
      - field_article_type
      - field_content_category_name
      - field_content_tag_name
      - field_content_target_group_name
      - field_content_topic_name
      - field_download_title
      - field_event_location_name
      - field_event_price
      - field_event_teaser
      - field_factbox_text
      - field_formatted_text
      - field_presentation_name
      - field_quotation
      - field_subtitle
      - field_video_caption
      - main_media_image_field_byline
      - main_media_image_field_caption
      - paragraph_images_field_byline
      - paragraph_images_field_caption
      - postal_code
      - rendered_item
      - title
      - title_full_text
      - type
    title: true
    alt: true
    tags:
      b: 2
      h1: 5
      h2: 3
      h3: 2
      strong: 2
    weights:
      preprocess_index: -15
      preprocess_query: -15
  rendered_item:
    plugin_id: rendered_item
    settings: {  }
  search_api_exclude_entity_processor:
    fields:
      node:
        - field_exclude_from_search
  type_boost:
    boosts:
      'entity:node':
        datasource_boost: !!float 1
        bundle_boosts:
          activity: !!float 0
          article: !!float 0
          badge: !!float 0
          download: !!float 0
          event: !!float 0
          redirect_page: !!float 2
          section_page: !!float 0
    weights:
      preprocess_index: 0
tracker_settings:
  default:
    plugin_id: default
    settings: {  }
    indexing_order: fifo
options:
  index_directly: true
  cron_limit: 50
server: solr
