version: "2.1"

services:
  # https proxy, hands connection down to the web-server.
  https:
    image: zazukoians/hitch
    ports:
      - '443'
    environment:
      HITCH_PARAMS: --backend=[web]:80 --frontend=[*]:443
      VIRTUAL_PROTO: https
      VIRTUAL_HOST: ddsdk.docker
    links:
      - web

  # Pure web-server, hands php-requests off to fpm.
  web:
    image: reload/drupal-apache-fpm
    ports:
      - '80'
    volumes:
      # Temporary mount for the cron-configuration, we'll copy it into place
      # with correct ownership via the init-script.
      - './docker/cron/drupal-cron:/root/tmp.drupal-cron:ro'
      - './docker/cron/setup-cron.sh:/etc/my_init.d/setup-cron.sh'
    volumes_from:
      - webroot
    links:
      - fpm
  # Instance of the php-image configured to serve fpm-requests.
  fpm:
    image: reload/drupal-php7-fpm:7.0
    ports:
      - '9000'
    volumes_from:
      - webroot
    links:
      - db
      - solr
    working_dir: /var/www/web
    environment:
      PATH: '/var/www/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
      PHP_SENDMAIL_PATH: /usr/local/bin/mhsendmail --smtp-addr="mailhog:1025"

  # Mariadb database, initialized with a nighly pre-build datadir.
  db:
    image: mariadb:10
    ports:
      - '3306'
    volumes:
      - './my.ini:/etc/mysql/conf.d/my.cnf'
      - './docker/init/ZZZ-finished-init.sh:/docker-entrypoint-initdb.d/ZZZ-finished-init.sh'
    volumes_from:
      - db-data
    healthcheck:
      test: ["CMD", "sh", "-c", "[ -e /tmp/docker-finished-init ]"]

    # Notice the following environment-variables only takes effect if we're
    # using a raw mariadb image. We're just leaving the values used during
    # the datadir build here for reference.
    # see https://github.com/reload/docker-db-datadir-worker/blob/master/opt/datadir-preinit/docker-compose.template.yml
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db
      MYSQL_USER: db
      MYSQL_PASSWORD: db

  # Nightly fetched dump.
  db-data:
    image: eu.gcr.io/reloaddk-data/db-datadir:ddsdk-latest
    # Comment the line above and uncomment the following if you want to import
    # a custom databasedump
    # image: tianon/true
    # volumes:
    #    - './docker/my-custom-db-dump.sql:/docker-entrypoint-initdb.d/100-db.sql'

  solr:
    image: solr:6.6
    ports:
      - '8983'
    volumes:
      - './.platform/solr-6.x-config:/solr-conf/conf:ro'
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - ddsmainindex
      - /solr-conf

  # Webroot and volumned paths needs to be accessible from multiple containers so
  # we set up all paths once and for all via a single volumne-container.
  webroot:
    image: tianon/true
    volumes:
      - './:/var/www:rw'

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"

  npm:
    image: node:argon
    volumes_from:
      - webroot
    volumes:
      - 'cache:/npm-cache'
    working_dir: /var/www
    environment:
      PATH: '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
      npm_config_cache: '/npm-cache/node'
    entrypoint: "/bin/sh -c 'npm run build && npm run watch'"

volumes:
  # NPM cache that survives docker-reset.sh
  cache:
